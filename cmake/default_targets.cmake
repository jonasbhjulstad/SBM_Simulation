include(${CMAKE_CURRENT_LIST_DIR}/Sycl_Config.cmake)
include(${CMAKE_CURRENT_LIST_DIR}/external_packages.cmake)
function(default_configure_target target_name)
    target_compile_options(${target_name} PUBLIC ${${PROJECT_NAME}_SYCL_FLAGS})
    target_link_options(${target_name} PUBLIC ${${PROJECT_NAME}_SYCL_FLAGS})
    target_include_directories(${target_name} PUBLIC $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include> $<INSTALL_INTERFACE:include>)
    target_include_directories(${target_name} PUBLIC $<BUILD_INTERFACE:${SYCL_INCLUDE_DIR}>)
    if (${ENABLE_CLANG_TIDY})
    set_target_properties(${target_name} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_COMMAND}")
    endif()
endfunction()

function(default_link_target target_name)
target_link_libraries(${target_name} PUBLIC ${${PROJECT_NAME}_EXTERNAL_PACKAGES} ${TINY_ORM_LIBRARIES})
endfunction()

function(add_binder source_file)
    pybind11_add_module(${source_file} "${source_file}.cpp")
    default_configure_target(${source_file})
    default_link_target(${source_file})
endfunction()

function(add_default_library source_file)
    add_library(${source_file} "${source_file}.cpp")
    default_configure_target(${source_file})
endfunction()


function(add_default_executable source_file)
    add_executable(${source_file} "${source_file}.cpp")
    default_configure_target(${source_file})
    default_link_target(${source_file})
    target_link_libraries(${source_file} PRIVATE ${PROJECT_NAME})
endfunction()
