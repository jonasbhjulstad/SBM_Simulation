
add_default_library(Sim_Buffers)
target_link_libraries(Sim_Buffers PUBLIC SBM_Database::SBM_Database Sim_Types Graph_Types Graph Dataframe Community_Mappings Validation)
add_default_library(Sim_Infection_Sampling)
target_link_libraries(Sim_Infection_Sampling PUBLIC Dataframe)
add_default_library(State_Accumulation)
target_link_libraries(State_Accumulation PUBLIC Validation)

add_library(${PROJECT_NAME} Simulation.cpp)
target_link_libraries(${PROJECT_NAME} PUBLIC -ldl -lpq Static_RNG::Static_RNG)
if(${ENABLE_TBB})
target_link_libraries(${PROJECT_NAME} PUBLIC TBB::tbb)
endif()
target_compile_options(${PROJECT_NAME} PUBLIC ${SYCL_CUSTOM_FLAGS})
target_compile_options(${PROJECT_NAME} PUBLIC ${DEFAULT_WARNING_FLAGS})
target_include_directories(${PROJECT_NAME} PUBLIC $<BUILD_INTERFACE:${SBM_SIMULATION_INCLUDE_DIR}> $<INSTALL_INTERFACE:include>)
target_link_options(${PROJECT_NAME} PUBLIC ${SYCL_CUSTOM_FLAGS} -fPIC)
if (${ENABLE_CLANG_TIDY})
set_target_properties(${PROJECT_NAME} PROPERTIES CXX_CLANG_TIDY "${CLANG_TIDY_COMMAND}")
endif()
target_link_libraries(${PROJECT_NAME} PUBLIC SBM_Database::SBM_Database Sim_Buffers SIR_Dynamics Sim_Infection_Sampling String_Manipulation math State_Accumulation Simulation_Tables)
# add_default_library(${PROJECT_NAME})
# target_link_libraries(${PROJECT_NAME} PUBLIC SBM_Database::SBM_Database Database Sim_Buffers SIR_Dynamics Sim_Infection_Sampling String_Manipulation math State_Accumulation Dataframe)
