# CMAKE generated file: DO NOT EDIT!
# Generated by "Ninja" Generator, CMake Version 3.22

# This file contains all the build statements describing the
# compilation DAG.

# =============================================================================
# Write statements declared in CMakeLists.txt:
# 
# Which is the root file.
# =============================================================================

# =============================================================================
# Project: SIR_SBM
# Configurations: Debug
# =============================================================================

#############################################
# Minimal version of Ninja required by this file

ninja_required_version = 1.5


#############################################
# Set configuration variable for custom commands.

CONFIGURATION = Debug
# =============================================================================
# Include auxiliary files.


#############################################
# Include rules file.

include CMakeFiles/rules.ninja

# =============================================================================

#############################################
# Logical path to working directory; prefix for absolute paths.

cmake_ninja_workdir = /home/deb/Documents/SBM_New/build/

#############################################
# Utility command for edit_cache

build CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build && /usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
  DESC = No interactive CMake dialog available...
  restat = 1

build edit_cache: phony CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build && /usr/bin/cmake --regenerate-during-build -S/home/deb/Documents/SBM_New -B/home/deb/Documents/SBM_New/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build rebuild_cache: phony CMakeFiles/rebuild_cache.util

# =============================================================================
# Write statements declared in CMakeLists.txt:
# /home/deb/Documents/SBM_New/CMakeLists.txt
# =============================================================================


#############################################
# Utility command for Experimental

build test/Experimental: phony test/CMakeFiles/Experimental


#############################################
# Utility command for Nightly

build test/Nightly: phony test/CMakeFiles/Nightly


#############################################
# Utility command for Continuous

build test/Continuous: phony test/CMakeFiles/Continuous


#############################################
# Utility command for NightlyMemoryCheck

build test/NightlyMemoryCheck: phony test/CMakeFiles/NightlyMemoryCheck


#############################################
# Utility command for NightlyStart

build test/NightlyStart: phony test/CMakeFiles/NightlyStart


#############################################
# Utility command for NightlyUpdate

build test/NightlyUpdate: phony test/CMakeFiles/NightlyUpdate


#############################################
# Utility command for NightlyConfigure

build test/NightlyConfigure: phony test/CMakeFiles/NightlyConfigure


#############################################
# Utility command for NightlyBuild

build test/NightlyBuild: phony test/CMakeFiles/NightlyBuild


#############################################
# Utility command for NightlyTest

build test/NightlyTest: phony test/CMakeFiles/NightlyTest


#############################################
# Utility command for NightlyCoverage

build test/NightlyCoverage: phony test/CMakeFiles/NightlyCoverage


#############################################
# Utility command for NightlyMemCheck

build test/NightlyMemCheck: phony test/CMakeFiles/NightlyMemCheck


#############################################
# Utility command for NightlySubmit

build test/NightlySubmit: phony test/CMakeFiles/NightlySubmit


#############################################
# Utility command for ExperimentalStart

build test/ExperimentalStart: phony test/CMakeFiles/ExperimentalStart


#############################################
# Utility command for ExperimentalUpdate

build test/ExperimentalUpdate: phony test/CMakeFiles/ExperimentalUpdate


#############################################
# Utility command for ExperimentalConfigure

build test/ExperimentalConfigure: phony test/CMakeFiles/ExperimentalConfigure


#############################################
# Utility command for ExperimentalBuild

build test/ExperimentalBuild: phony test/CMakeFiles/ExperimentalBuild


#############################################
# Utility command for ExperimentalTest

build test/ExperimentalTest: phony test/CMakeFiles/ExperimentalTest


#############################################
# Utility command for ExperimentalCoverage

build test/ExperimentalCoverage: phony test/CMakeFiles/ExperimentalCoverage


#############################################
# Utility command for ExperimentalMemCheck

build test/ExperimentalMemCheck: phony test/CMakeFiles/ExperimentalMemCheck


#############################################
# Utility command for ExperimentalSubmit

build test/ExperimentalSubmit: phony test/CMakeFiles/ExperimentalSubmit


#############################################
# Utility command for ContinuousStart

build test/ContinuousStart: phony test/CMakeFiles/ContinuousStart


#############################################
# Utility command for ContinuousUpdate

build test/ContinuousUpdate: phony test/CMakeFiles/ContinuousUpdate


#############################################
# Utility command for ContinuousConfigure

build test/ContinuousConfigure: phony test/CMakeFiles/ContinuousConfigure


#############################################
# Utility command for ContinuousBuild

build test/ContinuousBuild: phony test/CMakeFiles/ContinuousBuild


#############################################
# Utility command for ContinuousTest

build test/ContinuousTest: phony test/CMakeFiles/ContinuousTest


#############################################
# Utility command for ContinuousCoverage

build test/ContinuousCoverage: phony test/CMakeFiles/ContinuousCoverage


#############################################
# Utility command for ContinuousMemCheck

build test/ContinuousMemCheck: phony test/CMakeFiles/ContinuousMemCheck


#############################################
# Utility command for ContinuousSubmit

build test/ContinuousSubmit: phony test/CMakeFiles/ContinuousSubmit

# =============================================================================
# Object build statements for EXECUTABLE target comb


#############################################
# Order-only phony target for comb

build cmake_object_order_depends_target_comb: phony || test/CMakeFiles/comb.dir

build test/CMakeFiles/comb.dir/comb.cpp.o: CXX_COMPILER__comb_Debug /home/deb/Documents/SBM_New/test/comb.cpp || cmake_object_order_depends_target_comb
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/comb.dir/comb.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/comb.dir
  OBJECT_FILE_DIR = test/CMakeFiles/comb.dir


# =============================================================================
# Link build statements for EXECUTABLE target comb


#############################################
# Link the executable test/comb

build test/comb: CXX_EXECUTABLE_LINKER__comb_Debug test/CMakeFiles/comb.dir/comb.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/comb.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/comb
  TARGET_PDB = comb.dbg

# =============================================================================
# Object build statements for EXECUTABLE target graph


#############################################
# Order-only phony target for graph

build cmake_object_order_depends_target_graph: phony || test/CMakeFiles/graph.dir

build test/CMakeFiles/graph.dir/graph.cpp.o: CXX_COMPILER__graph_Debug /home/deb/Documents/SBM_New/test/graph.cpp || cmake_object_order_depends_target_graph
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/graph.dir/graph.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/graph.dir
  OBJECT_FILE_DIR = test/CMakeFiles/graph.dir


# =============================================================================
# Link build statements for EXECUTABLE target graph


#############################################
# Link the executable test/graph

build test/graph: CXX_EXECUTABLE_LINKER__graph_Debug test/CMakeFiles/graph.dir/graph.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/graph.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/graph
  TARGET_PDB = graph.dbg

# =============================================================================
# Object build statements for EXECUTABLE target collision


#############################################
# Order-only phony target for collision

build cmake_object_order_depends_target_collision: phony || test/CMakeFiles/collision.dir

build test/CMakeFiles/collision.dir/collision.cpp.o: CXX_COMPILER__collision_Debug /home/deb/Documents/SBM_New/test/collision.cpp || cmake_object_order_depends_target_collision
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/collision.dir/collision.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/collision.dir
  OBJECT_FILE_DIR = test/CMakeFiles/collision.dir


# =============================================================================
# Link build statements for EXECUTABLE target collision


#############################################
# Link the executable test/collision

build test/collision: CXX_EXECUTABLE_LINKER__collision_Debug test/CMakeFiles/collision.dir/collision.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/collision.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/collision
  TARGET_PDB = collision.dbg

# =============================================================================
# Object build statements for EXECUTABLE target initialize


#############################################
# Order-only phony target for initialize

build cmake_object_order_depends_target_initialize: phony || test/CMakeFiles/initialize.dir

build test/CMakeFiles/initialize.dir/initialize.cpp.o: CXX_COMPILER__initialize_Debug /home/deb/Documents/SBM_New/test/initialize.cpp || cmake_object_order_depends_target_initialize
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/initialize.dir/initialize.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/initialize.dir
  OBJECT_FILE_DIR = test/CMakeFiles/initialize.dir


# =============================================================================
# Link build statements for EXECUTABLE target initialize


#############################################
# Link the executable test/initialize

build test/initialize: CXX_EXECUTABLE_LINKER__initialize_Debug test/CMakeFiles/initialize.dir/initialize.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/initialize.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/initialize
  TARGET_PDB = initialize.dbg

# =============================================================================
# Object build statements for EXECUTABLE target population_count


#############################################
# Order-only phony target for population_count

build cmake_object_order_depends_target_population_count: phony || test/CMakeFiles/population_count.dir

build test/CMakeFiles/population_count.dir/population_count.cpp.o: CXX_COMPILER__population_count_Debug /home/deb/Documents/SBM_New/test/population_count.cpp || cmake_object_order_depends_target_population_count
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/population_count.dir/population_count.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/population_count.dir
  OBJECT_FILE_DIR = test/CMakeFiles/population_count.dir


# =============================================================================
# Link build statements for EXECUTABLE target population_count


#############################################
# Link the executable test/population_count

build test/population_count: CXX_EXECUTABLE_LINKER__population_count_Debug test/CMakeFiles/population_count.dir/population_count.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/population_count.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/population_count
  TARGET_PDB = population_count.dbg

# =============================================================================
# Object build statements for EXECUTABLE target recover


#############################################
# Order-only phony target for recover

build cmake_object_order_depends_target_recover: phony || test/CMakeFiles/recover.dir

build test/CMakeFiles/recover.dir/recover.cpp.o: CXX_COMPILER__recover_Debug /home/deb/Documents/SBM_New/test/recover.cpp || cmake_object_order_depends_target_recover
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/recover.dir/recover.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/recover.dir
  OBJECT_FILE_DIR = test/CMakeFiles/recover.dir


# =============================================================================
# Link build statements for EXECUTABLE target recover


#############################################
# Link the executable test/recover

build test/recover: CXX_EXECUTABLE_LINKER__recover_Debug test/CMakeFiles/recover.dir/recover.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/recover.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/recover
  TARGET_PDB = recover.dbg

# =============================================================================
# Object build statements for EXECUTABLE target bernoulli


#############################################
# Order-only phony target for bernoulli

build cmake_object_order_depends_target_bernoulli: phony || test/CMakeFiles/bernoulli.dir

build test/CMakeFiles/bernoulli.dir/bernoulli.cpp.o: CXX_COMPILER__bernoulli_Debug /home/deb/Documents/SBM_New/test/bernoulli.cpp || cmake_object_order_depends_target_bernoulli
  DEFINES = -DONEDPL_USE_OPENMP_BACKEND=0 -DONEDPL_USE_TBB_BACKEND=1
  DEP_FILE = test/CMakeFiles/bernoulli.dir/bernoulli.cpp.o.d
  FLAGS = -g -fsycl -fcolor-diagnostics -fsycl-targets=nvptx64-nvidia-cuda -std=gnu++20
  INCLUDES = -I/opt/intel/oneapi/compiler/2024.0/include -I/home/deb/Documents/SBM_New/include -isystem /opt/intel/oneapi/dpl/2022.3/include -isystem /opt/intel/oneapi/tbb/2021.11/include -isystem /usr/include/eigen3
  OBJECT_DIR = test/CMakeFiles/bernoulli.dir
  OBJECT_FILE_DIR = test/CMakeFiles/bernoulli.dir


# =============================================================================
# Link build statements for EXECUTABLE target bernoulli


#############################################
# Link the executable test/bernoulli

build test/bernoulli: CXX_EXECUTABLE_LINKER__bernoulli_Debug test/CMakeFiles/bernoulli.dir/bernoulli.cpp.o | /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12
  FLAGS = -g
  LINK_FLAGS = -fsycl-targets=nvptx64-nvidia-cuda
  LINK_LIBRARIES = /opt/intel/oneapi/tbb/2021.11/lib/libtbb_debug.so.12  -fsycl
  OBJECT_DIR = test/CMakeFiles/bernoulli.dir
  POST_BUILD = :
  PRE_LINK = :
  TARGET_FILE = test/bernoulli
  TARGET_PDB = bernoulli.dbg


#############################################
# Utility command for edit_cache

build test/CMakeFiles/edit_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
  DESC = No interactive CMake dialog available...
  restat = 1

build test/edit_cache: phony test/CMakeFiles/edit_cache.util


#############################################
# Utility command for rebuild_cache

build test/CMakeFiles/rebuild_cache.util: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/cmake --regenerate-during-build -S/home/deb/Documents/SBM_New -B/home/deb/Documents/SBM_New/build
  DESC = Running CMake to regenerate build system...
  pool = console
  restat = 1

build test/rebuild_cache: phony test/CMakeFiles/rebuild_cache.util


#############################################
# Custom command for test/CMakeFiles/Experimental

build test/CMakeFiles/Experimental | ${cmake_ninja_workdir}test/CMakeFiles/Experimental: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D Experimental
  pool = console


#############################################
# Custom command for test/CMakeFiles/Nightly

build test/CMakeFiles/Nightly | ${cmake_ninja_workdir}test/CMakeFiles/Nightly: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D Nightly
  pool = console


#############################################
# Custom command for test/CMakeFiles/Continuous

build test/CMakeFiles/Continuous | ${cmake_ninja_workdir}test/CMakeFiles/Continuous: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D Continuous
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyMemoryCheck

build test/CMakeFiles/NightlyMemoryCheck | ${cmake_ninja_workdir}test/CMakeFiles/NightlyMemoryCheck: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyMemoryCheck
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyStart

build test/CMakeFiles/NightlyStart | ${cmake_ninja_workdir}test/CMakeFiles/NightlyStart: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyStart
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyUpdate

build test/CMakeFiles/NightlyUpdate | ${cmake_ninja_workdir}test/CMakeFiles/NightlyUpdate: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyUpdate
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyConfigure

build test/CMakeFiles/NightlyConfigure | ${cmake_ninja_workdir}test/CMakeFiles/NightlyConfigure: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyConfigure
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyBuild

build test/CMakeFiles/NightlyBuild | ${cmake_ninja_workdir}test/CMakeFiles/NightlyBuild: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyBuild
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyTest

build test/CMakeFiles/NightlyTest | ${cmake_ninja_workdir}test/CMakeFiles/NightlyTest: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyTest
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyCoverage

build test/CMakeFiles/NightlyCoverage | ${cmake_ninja_workdir}test/CMakeFiles/NightlyCoverage: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyCoverage
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlyMemCheck

build test/CMakeFiles/NightlyMemCheck | ${cmake_ninja_workdir}test/CMakeFiles/NightlyMemCheck: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlyMemCheck
  pool = console


#############################################
# Custom command for test/CMakeFiles/NightlySubmit

build test/CMakeFiles/NightlySubmit | ${cmake_ninja_workdir}test/CMakeFiles/NightlySubmit: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D NightlySubmit
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalStart

build test/CMakeFiles/ExperimentalStart | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalStart: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalStart
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalUpdate

build test/CMakeFiles/ExperimentalUpdate | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalUpdate: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalUpdate
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalConfigure

build test/CMakeFiles/ExperimentalConfigure | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalConfigure: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalConfigure
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalBuild

build test/CMakeFiles/ExperimentalBuild | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalBuild: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalBuild
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalTest

build test/CMakeFiles/ExperimentalTest | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalTest: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalTest
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalCoverage

build test/CMakeFiles/ExperimentalCoverage | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalCoverage: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalCoverage
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalMemCheck

build test/CMakeFiles/ExperimentalMemCheck | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalMemCheck: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalMemCheck
  pool = console


#############################################
# Custom command for test/CMakeFiles/ExperimentalSubmit

build test/CMakeFiles/ExperimentalSubmit | ${cmake_ninja_workdir}test/CMakeFiles/ExperimentalSubmit: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ExperimentalSubmit
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousStart

build test/CMakeFiles/ContinuousStart | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousStart: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousStart
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousUpdate

build test/CMakeFiles/ContinuousUpdate | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousUpdate: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousUpdate
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousConfigure

build test/CMakeFiles/ContinuousConfigure | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousConfigure: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousConfigure
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousBuild

build test/CMakeFiles/ContinuousBuild | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousBuild: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousBuild
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousTest

build test/CMakeFiles/ContinuousTest | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousTest: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousTest
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousCoverage

build test/CMakeFiles/ContinuousCoverage | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousCoverage: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousCoverage
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousMemCheck

build test/CMakeFiles/ContinuousMemCheck | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousMemCheck: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousMemCheck
  pool = console


#############################################
# Custom command for test/CMakeFiles/ContinuousSubmit

build test/CMakeFiles/ContinuousSubmit | ${cmake_ninja_workdir}test/CMakeFiles/ContinuousSubmit: CUSTOM_COMMAND
  COMMAND = cd /home/deb/Documents/SBM_New/build/test && /usr/bin/ctest -D ContinuousSubmit
  pool = console

# =============================================================================
# Target aliases.

build Continuous: phony test/Continuous

build ContinuousBuild: phony test/ContinuousBuild

build ContinuousConfigure: phony test/ContinuousConfigure

build ContinuousCoverage: phony test/ContinuousCoverage

build ContinuousMemCheck: phony test/ContinuousMemCheck

build ContinuousStart: phony test/ContinuousStart

build ContinuousSubmit: phony test/ContinuousSubmit

build ContinuousTest: phony test/ContinuousTest

build ContinuousUpdate: phony test/ContinuousUpdate

build Experimental: phony test/Experimental

build ExperimentalBuild: phony test/ExperimentalBuild

build ExperimentalConfigure: phony test/ExperimentalConfigure

build ExperimentalCoverage: phony test/ExperimentalCoverage

build ExperimentalMemCheck: phony test/ExperimentalMemCheck

build ExperimentalStart: phony test/ExperimentalStart

build ExperimentalSubmit: phony test/ExperimentalSubmit

build ExperimentalTest: phony test/ExperimentalTest

build ExperimentalUpdate: phony test/ExperimentalUpdate

build Nightly: phony test/Nightly

build NightlyBuild: phony test/NightlyBuild

build NightlyConfigure: phony test/NightlyConfigure

build NightlyCoverage: phony test/NightlyCoverage

build NightlyMemCheck: phony test/NightlyMemCheck

build NightlyMemoryCheck: phony test/NightlyMemoryCheck

build NightlyStart: phony test/NightlyStart

build NightlySubmit: phony test/NightlySubmit

build NightlyTest: phony test/NightlyTest

build NightlyUpdate: phony test/NightlyUpdate

build bernoulli: phony test/bernoulli

build collision: phony test/collision

build comb: phony test/comb

build graph: phony test/graph

build initialize: phony test/initialize

build population_count: phony test/population_count

build recover: phony test/recover

# =============================================================================
# Folder targets.

# =============================================================================

#############################################
# Folder: /home/deb/Documents/SBM_New/build

build all: phony test/all

# =============================================================================

#############################################
# Folder: /home/deb/Documents/SBM_New/build/test

build test/all: phony test/comb test/graph test/collision test/initialize test/population_count test/recover test/bernoulli

# =============================================================================
# Built-in targets


#############################################
# Re-run CMake if any of its inputs changed.

build build.ninja: RERUN_CMAKE | ../CMakeLists.txt ../cmake/default_targets.cmake ../cmake/external_packages.cmake ../test/CMakeLists.txt /opt/intel/oneapi/compiler/2024.0/lib/cmake/IntelSYCL/IntelSYCLConfig.cmake /opt/intel/oneapi/compiler/2024.0/lib/cmake/IntelSYCL/IntelSYCLConfigVersion.cmake /opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL/oneDPLConfig.cmake /opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL/oneDPLConfigVersion.cmake /opt/intel/oneapi/tbb/2021.11/lib/cmake/tbb/TBBConfig.cmake /opt/intel/oneapi/tbb/2021.11/lib/cmake/tbb/TBBConfigVersion.cmake /usr/share/cmake-3.22/Modules/CMakeCInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake /usr/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.22/Modules/CTest.cmake /usr/share/cmake-3.22/Modules/CTestTargets.cmake /usr/share/cmake-3.22/Modules/CTestUseLaunchers.cmake /usr/share/cmake-3.22/Modules/CheckCXXCompilerFlag.cmake /usr/share/cmake-3.22/Modules/CheckCXXSourceCompiles.cmake /usr/share/cmake-3.22/Modules/CheckIncludeFileCXX.cmake /usr/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM-C.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM-CXX.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM.cmake /usr/share/cmake-3.22/Modules/DartConfiguration.tcl.in /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.22/Modules/FindPackageMessage.cmake /usr/share/cmake-3.22/Modules/FindPkgConfig.cmake /usr/share/cmake-3.22/Modules/Internal/CheckCompilerFlag.cmake /usr/share/cmake-3.22/Modules/Internal/CheckSourceCompiles.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM-C.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM-CXX.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM.cmake /usr/share/cmake-3.22/Modules/Platform/Linux.cmake /usr/share/cmake-3.22/Modules/Platform/UnixPaths.cmake /usr/share/eigen3/cmake/Eigen3Config.cmake /usr/share/eigen3/cmake/Eigen3ConfigVersion.cmake /usr/share/eigen3/cmake/Eigen3Targets.cmake CMakeCache.txt CMakeFiles/3.22.1/CMakeCCompiler.cmake CMakeFiles/3.22.1/CMakeCXXCompiler.cmake CMakeFiles/3.22.1/CMakeSystem.cmake
  pool = console


#############################################
# A missing CMake input file is not an error.

build ../CMakeLists.txt ../cmake/default_targets.cmake ../cmake/external_packages.cmake ../test/CMakeLists.txt /opt/intel/oneapi/compiler/2024.0/lib/cmake/IntelSYCL/IntelSYCLConfig.cmake /opt/intel/oneapi/compiler/2024.0/lib/cmake/IntelSYCL/IntelSYCLConfigVersion.cmake /opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL/oneDPLConfig.cmake /opt/intel/oneapi/dpl/2022.3/lib/cmake/oneDPL/oneDPLConfigVersion.cmake /opt/intel/oneapi/tbb/2021.11/lib/cmake/tbb/TBBConfig.cmake /opt/intel/oneapi/tbb/2021.11/lib/cmake/tbb/TBBConfigVersion.cmake /usr/share/cmake-3.22/Modules/CMakeCInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCXXInformation.cmake /usr/share/cmake-3.22/Modules/CMakeCheckCompilerFlagCommonPatterns.cmake /usr/share/cmake-3.22/Modules/CMakeCommonLanguageInclude.cmake /usr/share/cmake-3.22/Modules/CMakeGenericSystem.cmake /usr/share/cmake-3.22/Modules/CMakeInitializeConfigs.cmake /usr/share/cmake-3.22/Modules/CMakeLanguageInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInformation.cmake /usr/share/cmake-3.22/Modules/CMakeSystemSpecificInitialize.cmake /usr/share/cmake-3.22/Modules/CTest.cmake /usr/share/cmake-3.22/Modules/CTestTargets.cmake /usr/share/cmake-3.22/Modules/CTestUseLaunchers.cmake /usr/share/cmake-3.22/Modules/CheckCXXCompilerFlag.cmake /usr/share/cmake-3.22/Modules/CheckCXXSourceCompiles.cmake /usr/share/cmake-3.22/Modules/CheckIncludeFileCXX.cmake /usr/share/cmake-3.22/Modules/Compiler/CMakeCommonCompilerMacros.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM-C.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM-CXX.cmake /usr/share/cmake-3.22/Modules/Compiler/IntelLLVM.cmake /usr/share/cmake-3.22/Modules/DartConfiguration.tcl.in /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake /usr/share/cmake-3.22/Modules/FindPackageMessage.cmake /usr/share/cmake-3.22/Modules/FindPkgConfig.cmake /usr/share/cmake-3.22/Modules/Internal/CheckCompilerFlag.cmake /usr/share/cmake-3.22/Modules/Internal/CheckSourceCompiles.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM-C.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM-CXX.cmake /usr/share/cmake-3.22/Modules/Platform/Linux-IntelLLVM.cmake /usr/share/cmake-3.22/Modules/Platform/Linux.cmake /usr/share/cmake-3.22/Modules/Platform/UnixPaths.cmake /usr/share/eigen3/cmake/Eigen3Config.cmake /usr/share/eigen3/cmake/Eigen3ConfigVersion.cmake /usr/share/eigen3/cmake/Eigen3Targets.cmake CMakeCache.txt CMakeFiles/3.22.1/CMakeCCompiler.cmake CMakeFiles/3.22.1/CMakeCXXCompiler.cmake CMakeFiles/3.22.1/CMakeSystem.cmake: phony


#############################################
# Clean all the built files.

build clean: CLEAN


#############################################
# Print all primary targets available.

build help: HELP


#############################################
# Make the all target the default.

default all
